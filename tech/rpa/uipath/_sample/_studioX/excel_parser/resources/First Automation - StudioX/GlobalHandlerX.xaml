<Activity mc:Ignorable="sap sap2010" x:Class="GlobalHandlerX" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sx="clr-namespace:System.Xml;assembly=System.Xml" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uico="http://schemas.uipath.com/workflow/activities/contracts" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="errorInfo" Type="InArgument(uico:ExceptionHandlerArgs)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="result" Type="OutArgument(uico:ErrorAction)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>998,1364</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GlobalHandlerX</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Activities.Contracts</x:String>
      <x:String>System.Xml.XPath</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="21">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Activities.Contracts</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="This sequence steps in during execution when the project encounters an unmanaged error.&#xA;&#xA;Important: Arguments 'errorInfo' and 'result' should not be removed." DisplayName="GlobalHandlerX" sap:VirtualizedContainerService.HintSize="978,1264" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Default="RuntimeExecutionError_Template.html" Modifiers="ReadOnly" Name="TemplateFilePath" />
      <Variable x:TypeArguments="x:String" Name="ErrorTemplate" />
      <Variable x:TypeArguments="x:Boolean" Name="SkipIterationFlag" />
      <Variable x:TypeArguments="s:String[]" sap2010:Annotation.AnnotationText="List of workflow elements where to stop the error propagation. Should contain the repetitive elements, like ForEachSomething activities, but we need to stop the error propagation before reaching the repetitive element, to be able to continue with the next iteration. Last element before the repetitive is a System.Activities.Statements.Sequence, invisible in StudioX designer, but present in the xaml file. &#xD;&#xA;Top most activity of any StudioX workflow is of type UiPath.Excel.Activities.Business.SequenceX and that one is added as well in the list to prevent the exception to propagate outside of the workflow.&#xD;&#xA;&#xD;&#xA;Basically, only the Sequence element should be enough in the list and the SequenceX is added as a fail-safe mechanism. " Default="[{&quot;System.Activities.Statements.Sequence&quot;, &quot;UiPath.Excel.Activities.Business.SequenceX&quot;}]" Modifiers="ReadOnly" Name="RepetitiveElements" />
      <Variable x:TypeArguments="sx:XmlNode" Name="ActivityNode" />
      <Variable x:TypeArguments="x:String" Default="RuntimeExecutionError.html" Name="CustomInputContentPath" />
      <Variable x:TypeArguments="x:String" Name="UserAction" />
      <Variable x:TypeArguments="x:String" Default="SkipIterationFlag=True" Name="SkipIterationFlagText" />
      <Variable x:TypeArguments="x:String" Name="ErrorTemplateBackup" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">440,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <av:PointCollection x:Key="ConnectorLocation">470,77.5 470,124.5</av:PointCollection>
        <x:Double x:Key="Height">1171</x:Double>
        <x:Double x:Key="Width">944</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID11</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID11">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">370,124.5</av:Point>
          <av:Size x:Key="ShapeSize">200,51</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">470,175.5 470,225.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Error" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[errorInfo.Exception.ToString]" />
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">370,225.5</av:Point>
              <av:Size x:Key="ShapeSize">200,66</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">470,291.5 470,350</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Get template" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_51">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadTextFile Content="[ErrorTemplate]" DisplayName="Read Error Template" FileName="[TemplateFilePath]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="ReadTextFile_6" />
            <Assign DisplayName="Assign ErrorTemplateBackup" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_59">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[ErrorTemplateBackup]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[ErrorTemplate]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">339,350</av:Point>
                  <av:Size x:Key="ShapeSize">262,60</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">470,410 470,439.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign Skip Iteration Flag" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[SkipIterationFlag]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">[ErrorTemplate.StartsWith(SkipIterationFlagText)]</InArgument>
                </Assign.Value>
              </Assign>
              <FlowStep.Next>
                <FlowDecision x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Are we in a Skip Iteration? Then Retrow the exception untill we reach the For Each activity. Else, do the normal exception handling." Condition="[SkipIterationFlag]" DisplayName="Skip Iteration? " sap:VirtualizedContainerService.HintSize="160,204" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">390,439.5</av:Point>
                      <av:Size x:Key="ShapeSize">160,204</av:Size>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <av:PointCollection x:Key="TrueConnector">390,541.5 280.5,541.5 280.5,656.5</av:PointCollection>
                      <x:String x:Key="TrueLabel">Yes</x:String>
                      <x:String x:Key="FalseLabel">No</x:String>
                      <av:PointCollection x:Key="FalseConnector">550,541.5 750,541.5 750,597</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <FlowDecision x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="Did we reached the For Each level?" Condition="[RepetitiveElements.Contains(errorInfo.ActivityInfo.TypeName)]" DisplayName="Repetitive structure top level?" sap:VirtualizedContainerService.HintSize="160,129" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <av:Point x:Key="ShapeLocation">200.5,656.5</av:Point>
                          <av:Size x:Key="ShapeSize">160,129</av:Size>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <av:PointCollection x:Key="TrueConnector">200.5,721 131,721 131,821.5</av:PointCollection>
                          <av:PointCollection x:Key="FalseConnector">360.5,721 480,721 480,819</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <FlowDecision.True>
                        <FlowStep x:Name="__ReferenceID4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">0,821.5</av:Point>
                              <av:Size x:Key="ShapeSize">262,117</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">131,938.5 131,981.5</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap2010:Annotation.AnnotationText="We reached the Repetitive activity. &#xA;Ignore the error to continue with the next iteration." DisplayName="Assign Result to Ignore" sap:VirtualizedContainerService.HintSize="262,117" sap2010:WorkflowViewState.IdRef="Assign_2">
                            <Assign.To>
                              <OutArgument x:TypeArguments="uico:ErrorAction">[result]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="uico:ErrorAction">[ErrorAction.Ignore]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <FlowStep.Next>
                            <FlowStep x:Name="__ReferenceID6">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">31,981.5</av:Point>
                                  <av:Size x:Key="ShapeSize">200,78</av:Size>
                                  <av:PointCollection x:Key="ConnectorLocation">131,1059.5 131,1129.5 365,1129.5</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:WriteTextFile sap2010:Annotation.AnnotationText="Clear the Skip Iteration Flag" DisplayName="Write Error Template Without flag" FileName="[TemplateFilePath]" sap:VirtualizedContainerService.HintSize="200,78" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[ErrorTemplateBackup.Replace(SkipIterationFlagText, &quot;&quot;)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:WriteTextFile>
                              <FlowStep.Next>
                                <FlowStep x:Name="__ReferenceID0">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">365,1099</av:Point>
                                      <av:Size x:Key="ShapeSize">230,61</av:Size>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <WriteLine DisplayName="Write Line Result" sap:VirtualizedContainerService.HintSize="230,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[result.ToString]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </WriteLine>
                                </FlowStep>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.True>
                      <FlowDecision.False>
                        <FlowStep x:Name="__ReferenceID5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">349,819</av:Point>
                              <av:Size x:Key="ShapeSize">262,102</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">480,921 480,1099</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap2010:Annotation.AnnotationText="Re-throw the error and this handler will be executed again for the parent element." DisplayName="Assign Result to Continue" sap:VirtualizedContainerService.HintSize="262,102" sap2010:WorkflowViewState.IdRef="Assign_3">
                            <Assign.To>
                              <OutArgument x:TypeArguments="uico:ErrorAction">[result]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="uico:ErrorAction">[ErrorAction.Continue]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <FlowStep.Next>
                            <x:Reference>__ReferenceID0</x:Reference>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.False>
                    </FlowDecision>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <FlowStep x:Name="__ReferenceID7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">650,597</av:Point>
                          <av:Size x:Key="ShapeSize">200,66</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">750,663 750,704</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Prepare the Custom Input Form" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_49">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="ActionType" />
                          <Variable x:TypeArguments="x:String" Default="%[ACTIONTYPE_PLACEHOLDER]" Name="placeholder_ActionType" />
                          <Variable x:TypeArguments="x:String" Name="ActivityName" />
                          <Variable x:TypeArguments="x:String" Name="ActivityType" />
                          <Variable x:TypeArguments="ui:GenericValue" Name="ProblemDescription" />
                          <Variable x:TypeArguments="x:String" Default="%[ACTIVITYTYPE_PLACEHOLDER]" Name="placeholder_ActivityType" />
                          <Variable x:TypeArguments="x:String" Default="%[PROBLEMDESC_PLACEHOLDER]" Name="ProblemDescriptionPlaceholder" />
                          <Variable x:TypeArguments="x:String" Name="PackageName" />
                          <Variable x:TypeArguments="x:String" Name="MainFileContent" />
                          <Variable x:TypeArguments="sx:XmlNamespaceManager" Name="XmlNamespaceManagerMain" />
                          <Variable x:TypeArguments="sx:XmlDocument" Name="XmlMainFile" />
                          <Variable x:TypeArguments="x:String" Name="CardTag" />
                          <Variable x:TypeArguments="x:String" Default="%[ERRORPATH_PLACEHOLDER]" Name="placeholder_ErrorPath" />
                          <Variable x:TypeArguments="x:String" Name="ApplicationURL" />
                          <Variable x:TypeArguments="x:String" Name="placeholder_divAnchor" />
                          <Variable x:TypeArguments="x:String" Name="ApplicationName" />
                          <Variable x:TypeArguments="x:String" Default="%[DIV_CARD_PLACEHOLDER]" Name="placeholder_divCard" />
                          <Variable x:TypeArguments="x:String" Name="placeholder_divApplicationCode" />
                          <Variable x:TypeArguments="x:String" Default="%[ACTIVITYNAME_PLACEHOLDER]" Name="placeholder_ActivityName" />
                          <Variable x:TypeArguments="sx:XmlNode" Name="ActivityCardNode" />
                          <Variable x:TypeArguments="x:Boolean" Default="False" Name="FoundRepetitiveActivity" />
                          <Variable x:TypeArguments="x:String" Default="%[SKIPITERATION_VIS_PLACEHOLDER]" Name="placeholder_SkipIteration" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:MultipleAssign DisplayName="Multiple Assign Error Info" sap:VirtualizedContainerService.HintSize="566,191" sap2010:WorkflowViewState.IdRef="MultipleAssign_7">
                          <ui:MultipleAssign.AssignOperations>
                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[PackageName]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">[String.Join(".", errorInfo.ActivityInfo.TypeName.Split("."c).Take(3))]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[ActivityName]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">[errorInfo.ActivityInfo.Name]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[ActivityType]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">[errorInfo.ActivityInfo.TypeName]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[ProblemDescription]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="ui:GenericValue">[errorInfo.Exception.Message]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                            </scg:List>
                          </ui:MultipleAssign.AssignOperations>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:MultipleAssign>
                        <Sequence DisplayName="Multiple Replace ActivityType characters" sap:VirtualizedContainerService.HintSize="566,66" sap2010:WorkflowViewState.IdRef="Sequence_26">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Replace BuilderPattern="^(.*)\.(\w+)$" DisplayName="Replace ActivityType characters1" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Replace_4" Input="[ActivityType]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ST&quot;,&quot;OperationName&quot;:&quot;Starts with&quot;,&quot;OperationValue&quot;:&quot;^&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:1,&quot;OperationID&quot;:&quot;ANYTHING&quot;,&quot;OperationName&quot;:&quot;Anything&quot;,&quot;OperationValue&quot;:&quot;.&quot;,&quot;QuantifierFirstValue&quot;:&quot;*&quot;,&quot;QuantifierID&quot;:&quot;ANY&quot;,&quot;QuantifierName&quot;:&quot;Any (0 or more)&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:2,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;\\.&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:3,&quot;OperationID&quot;:&quot;ANYWCHAR&quot;,&quot;OperationName&quot;:&quot;Any word character&quot;,&quot;OperationValue&quot;:&quot;\\w&quot;,&quot;QuantifierFirstValue&quot;:&quot;+&quot;,&quot;QuantifierID&quot;:&quot;OOM&quot;,&quot;QuantifierName&quot;:&quot;At least one (1 or more)&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:4,&quot;OperationID&quot;:&quot;END&quot;,&quot;OperationName&quot;:&quot;Ends with&quot;,&quot;OperationValue&quot;:&quot;$&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="^(.*)\.(\w+)$" RegexOption="IgnoreCase" Replacement="$2" Result="[ActivityType]" />
                          <ui:Replace BuilderPattern="([A-Z])" DisplayName="Replace ActivityType characters2" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Replace_5" Input="[ActivityType]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;([A-Z])&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="([A-Z])" RegexOption="None" Replacement=" $1" Result="[ActivityType]" />
                          <ui:Replace BuilderPattern="^\s*" DisplayName="Replace ActivityType characters3" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Replace_6" Input="[ActivityType]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ST&quot;,&quot;OperationName&quot;:&quot;Starts with&quot;,&quot;OperationValue&quot;:&quot;^&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:1,&quot;OperationID&quot;:&quot;WHITESP&quot;,&quot;OperationName&quot;:&quot;Whitespace&quot;,&quot;OperationValue&quot;:&quot;\\s&quot;,&quot;QuantifierFirstValue&quot;:&quot;*&quot;,&quot;QuantifierID&quot;:&quot;ANY&quot;,&quot;QuantifierName&quot;:&quot;Any (0 or more)&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="^\s*" RegexOption="IgnoreCase" Result="[ActivityType]">
                            <ui:Replace.Replacement>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:Replace.Replacement>
                          </ui:Replace>
                        </Sequence>
                        <Sequence DisplayName="Parse Main File to XML" sap:VirtualizedContainerService.HintSize="566,66" sap2010:WorkflowViewState.IdRef="Sequence_29">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch DisplayName="Try Catch Access to Main File" sap:VirtualizedContainerService.HintSize="520,51" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                            <TryCatch.Variables>
                              <Variable x:TypeArguments="x:String" Default="Main.xaml" Name="MainFile" />
                            </TryCatch.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <ui:ReadTextFile Content="[MainFileContent]" DisplayName="Read Text File - Main.xaml" FileName="[MainFile]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="ReadTextFile_4" />
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="If wf runs from tray" sap:VirtualizedContainerService.HintSize="426,421" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:CopyFile ContinueOnError="{x:Null}" Destination="tmpMainSeqContext.txt" DisplayName="Copy File Main Sequence Content" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_2" Overwrite="True" Path="[MainFile]" />
                                    <ui:ReadTextFile Content="[MainFileContent]" DisplayName="Read tmpMainSeq File" FileName="tmpMainSeqContext.txt" sap:VirtualizedContainerService.HintSize="384,132" sap2010:WorkflowViewState.IdRef="ReadTextFile_5" />
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                          <Assign DisplayName="Assign XmlMainFile" sap:VirtualizedContainerService.HintSize="520,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sx:XmlDocument">[XmlMainFile]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sx:XmlDocument">[New XmlDocument()]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign xmlNamespaceManagerMain" sap:VirtualizedContainerService.HintSize="520,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sx:XmlNamespaceManager">[XmlNamespaceManagerMain]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sx:XmlNamespaceManager">[New XmlNamespaceManager(XmlMainFile.NameTable)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <InvokeMethod DisplayName="Create XML tree" sap:VirtualizedContainerService.HintSize="520,132" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="LoadXml">
                            <InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="sx:XmlDocument">[XmlMainFile]</InArgument>
                            </InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="x:String">[MainFileContent]</InArgument>
                          </InvokeMethod>
                          <InvokeMethod sap2010:Annotation.AnnotationText="The default namespace needs to be specified for later usage of XPath queries: https://docs.microsoft.com/en-us/dotnet/standard/data/xml/xpath-queries-and-namespaces#the-default-namespace&#xA;&#xA;In this case, the default namespace can be referenced by the prefix &quot;xaml&quot;." DisplayName="Add the default namespace" sap:VirtualizedContainerService.HintSize="520,294" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="AddNamespace">
                            <InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="sx:XmlNamespaceManager">[XmlNamespaceManagerMain]</InArgument>
                            </InvokeMethod.TargetObject>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <InArgument x:TypeArguments="x:String">xaml</InArgument>
                            <InArgument x:TypeArguments="x:String">http://schemas.microsoft.com/netfx/2009/xaml/activities</InArgument>
                          </InvokeMethod>
                          <Sequence sap2010:Annotation.AnnotationText="These namespaces are explicitly added to prevent errors when a particular check searches for elements in a namespace, but one of the workflows checked does not declare that namespace." DisplayName="Add commonly used namespaces" sap:VirtualizedContainerService.HintSize="520,183" sap2010:WorkflowViewState.IdRef="Sequence_28">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <InvokeMethod sap2010:Annotation.AnnotationText="Add the commonly used UI namespace: &#xA;xmlns:ui=&quot;http://schemas.uipath.com/workflow/activities&quot;" DisplayName="Add UI namespace" sap:VirtualizedContainerService.HintSize="238,219" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="AddNamespace">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="sx:XmlNamespaceManager">[XmlNamespaceManagerMain]</InArgument>
                              </InvokeMethod.TargetObject>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <InArgument x:TypeArguments="x:String">ui</InArgument>
                              <InArgument x:TypeArguments="x:String">http://schemas.uipath.com/workflow/activities</InArgument>
                            </InvokeMethod>
                            <InvokeMethod sap2010:Annotation.AnnotationText="Add the commonly used SAP namespace: &#xA;xmlns:sap2010=&quot;http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation&quot;" DisplayName="Add SAP2010 namespace" sap:VirtualizedContainerService.HintSize="238,219" sap2010:WorkflowViewState.IdRef="InvokeMethod_9" MethodName="AddNamespace">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="sx:XmlNamespaceManager">[XmlNamespaceManagerMain]</InArgument>
                              </InvokeMethod.TargetObject>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <InArgument x:TypeArguments="x:String">sap2010</InArgument>
                              <InArgument x:TypeArguments="x:String">http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation</InArgument>
                            </InvokeMethod>
                          </Sequence>
                          <ui:ForEach x:TypeArguments="sx:XmlAttribute" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Add other namespaces defined in the workflow file." DisplayName="For Each Atttribute in XML" sap:VirtualizedContainerService.HintSize="520,441" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[XmlMainFile.DocumentElement.Attributes]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="sx:XmlAttribute">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="sx:XmlAttribute" Name="Attribute" />
                                </ActivityAction.Argument>
                                <If Condition="[Attribute.Name.StartsWith(&quot;xmlns:&quot;)]" sap:VirtualizedContainerService.HintSize="484,280" sap2010:WorkflowViewState.IdRef="If_6">
                                  <If.Then>
                                    <InvokeMethod DisplayName="Add namespaces to manager" sap:VirtualizedContainerService.HintSize="238,132" sap2010:WorkflowViewState.IdRef="InvokeMethod_10" MethodName="AddNamespace">
                                      <InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="sx:XmlNamespaceManager">[XmlNamespaceManagerMain]</InArgument>
                                      </InvokeMethod.TargetObject>
                                      <InArgument x:TypeArguments="x:String">[Attribute.Name.Substring(Attribute.Name.IndexOf(":")+1)]</InArgument>
                                      <InArgument x:TypeArguments="x:String">[Attribute.Value]</InArgument>
                                    </InvokeMethod>
                                  </If.Then>
                                </If>
                              </ActivityAction>
                            </ui:ForEach.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEach>
                        </Sequence>
                        <Sequence DisplayName="Get Path of the Error" sap:VirtualizedContainerService.HintSize="566,66" sap2010:WorkflowViewState.IdRef="Sequence_33">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="ErrorPathInWf" />
                            <Variable x:TypeArguments="x:Boolean" Default="True" Name="IsFirstActivityNode" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign ActivityNode" sap:VirtualizedContainerService.HintSize="572,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sx:XmlNode">[ActivityNode]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sx:XmlNode">[XmlMainFile.DocumentElement.SelectNodes("//*[@DisplayName="""+ActivityName+"""]",xmlNamespaceManagerMain)(0)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <While DisplayName="Add parent to path" sap:VirtualizedContainerService.HintSize="572,1050" sap2010:WorkflowViewState.IdRef="While_5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <While.Condition>[ActivityNode IsNot Nothing]</While.Condition>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="526,892" sap2010:WorkflowViewState.IdRef="Sequence_32">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="s:String[]" Default="[{&quot;ui:RepeatNumberOfTimesX&quot;, &quot;ueab:ExcelForEachRow&quot;, &quot;umab:OutlookForEachMail&quot;, &quot;ui:ForEachFileX&quot;}]" Name="XmlNodeNamesForRepetitiveElements" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[ActivityNode.Attributes IsNot Nothing AndAlso ActivityNode.Attributes(&quot;DisplayName&quot;) IsNot Nothing AndAlso (ActivityNode.Attributes(&quot;DisplayName&quot;).Value &lt;&gt;&quot;Do&quot; OrElse Not ActivityNode.Name.Contains(&quot;Sequence&quot;) )]" DisplayName="If Visible container / activity" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_7">
                                <If.Then>
                                  <Assign DisplayName="Assign ErrorPath" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[ErrorPathInWf]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[" &gt; "+ ActivityNode.Attributes("DisplayName").Value+ErrorPathInWf]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Then>
                              </If>
                              <If sap2010:Annotation.AnnotationText="Do not show the Skip Iteration option if the error was generated by the Repetitive activity directly. Only if the error is inside the repetitive activity." Condition="[Not IsFirstActivityNode AndAlso XmlNodeNamesForRepetitiveElements.Contains(ActivityNode.Name)]" DisplayName="If there is a loop" sap:VirtualizedContainerService.HintSize="484,250" sap2010:WorkflowViewState.IdRef="If_11">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Assign DisplayName="Assign FoundRepetitiveActivity" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_60">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[FoundRepetitiveActivity]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Then>
                              </If>
                              <Assign DisplayName="Assign ParrentNode for Path" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="sx:XmlNode">[ActivityNode]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="sx:XmlNode">[ActivityNode.ParentNode]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap2010:Annotation.AnnotationText="Default value is set the True and after the first iteration we set it to False. We don't want to include the Stip Iteration option if the error was generated by the repetitive activity directly, i.e. it is the first activity node." DisplayName="Assign IsFirstActivityNode" sap:VirtualizedContainerService.HintSize="484,162" sap2010:WorkflowViewState.IdRef="Assign_69">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[IsFirstActivityNode]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Assign>
                            </Sequence>
                          </While>
                          <ui:MultipleAssign DisplayName="Multiple Assign ErrorPath" sap:VirtualizedContainerService.HintSize="572,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_8">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[ErrorPathInWf]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">["Main"+ErrorPathInWf]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholder_ErrorPath, ErrorPathInWf)]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:MultipleAssign>
                        </Sequence>
                        <Switch x:TypeArguments="x:String" DisplayName="Switch Action Scope" Expression="[PackageName]" sap:VirtualizedContainerService.HintSize="566,919" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                          <Switch.Default>
                            <Sequence DisplayName="Default Case" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_48">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Assign Action Type unknown" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_52">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[ActionType]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">an Action</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Assign divApplicationPlaceholder" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_53">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[placeholder_divApplicationCode]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[""]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </Switch.Default>
                          <Sequence x:Key="UiPath.Excel.Activities" DisplayName="Excel Case" sap:VirtualizedContainerService.HintSize="526,869" sap2010:WorkflowViewState.IdRef="Sequence_35">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="excelFilePath" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MultipleAssign DisplayName="Multiple Assign Excel-1" sap:VirtualizedContainerService.HintSize="484,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_9">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[ActionType]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">Excel</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[CardTag]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">ueab:ExcelApplicationCard</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="sx:XmlNode">[ActivityNode]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="sx:XmlNode">[XmlMainFile.DocumentElement.SelectNodes("//*[@DisplayName="""+ActivityName+"""]",xmlNamespaceManagerMain)(0)]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                            </ui:MultipleAssign>
                            <While sap2010:Annotation.AnnotationText="It's not mandatory to have a parent. The Excel activity can be outside of an Excel Card and reference the Excel file by its name." DisplayName="Get parent Excel Case" sap:VirtualizedContainerService.HintSize="484,260" sap2010:WorkflowViewState.IdRef="While_6">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <While.Condition>[ActivityNode IsNot Nothing AndAlso Not ActivityNode.Name.Equals(CardTag)]</While.Condition>
                              <Assign DisplayName="Assign ActivityNode from Parent node" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="sx:XmlNode">[ActivityNode]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="sx:XmlNode">[ActivityNode.ParentNode]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </While>
                            <If Condition="[ActivityNode IsNot Nothing]" DisplayName="If Excel Card found" sap:VirtualizedContainerService.HintSize="484,277" sap2010:WorkflowViewState.IdRef="If_13">
                              <If.Then>
                                <ui:MultipleAssign DisplayName="Multiple Assign Excel-2" sap:VirtualizedContainerService.HintSize="338,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_10">
                                  <ui:MultipleAssign.AssignOperations>
                                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_28">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[excelFilePath]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[ActivityNode.Attributes("WorkbookPath").Value]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_29">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[placeholder_divApplicationCode]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[String.Format("&lt;div&gt;&lt;p&gt; Excel file path: &lt;strong&gt; {0} &lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;",excelFilePath)]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                    </scg:List>
                                  </ui:MultipleAssign.AssignOperations>
                                </ui:MultipleAssign>
                              </If.Then>
                            </If>
                          </Sequence>
                          <Sequence x:Key="UiPath.Mail.Activities" DisplayName="Outlook Case" sap:VirtualizedContainerService.HintSize="526,691" sap2010:WorkflowViewState.IdRef="Sequence_37">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MultipleAssign DisplayName="Multiple Assign Outlook-1" sap:VirtualizedContainerService.HintSize="484,51" sap2010:WorkflowViewState.IdRef="MultipleAssign_11">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[ActionType]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">Outlook</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_31">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[CardTag]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">umab:OutlookApplicationCard</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="sx:XmlNode">[ActivityNode]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="sx:XmlNode">[XmlMainFile.DocumentElement.SelectNodes("//*[@DisplayName="""+ActivityName+"""]",xmlNamespaceManagerMain)(0)]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:MultipleAssign>
                            <While sap2010:Annotation.AnnotationText="It's not mandatory to have a parent. The Mail activity can be outside of an Outlook Account Card and reference the Outlook Account by its name." DisplayName="Get parent Outlook case" sap:VirtualizedContainerService.HintSize="484,260" sap2010:WorkflowViewState.IdRef="While_7">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <While.Condition>[ActivityNode IsNot Nothing AndAlso Not ActivityNode.Name.Equals(CardTag)]</While.Condition>
                              <Assign DisplayName="Assign ActivityNode from Parent node" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="sx:XmlNode">[ActivityNode]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="sx:XmlNode">[ActivityNode.ParentNode]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </While>
                            <If Condition="[ActivityNode IsNot Nothing]" DisplayName="If Outlook Card found" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_14">
                              <If.Then>
                                <Assign DisplayName="Assign divApplicationPlaceholder Outlook" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[placeholder_divApplicationCode]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[String.Format("&lt;div&gt;&lt;p&gt; Outlook account: &lt;strong&gt; {0} &lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;",ActivityNode.Attributes("Account").Value)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                            </If>
                          </Sequence>
                          <Sequence x:Key="UiPath.UiAutomationX.Activities" DisplayName="ApplicationCase" sap:VirtualizedContainerService.HintSize="737,2973" sap2010:WorkflowViewState.IdRef="Sequence_47">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MultipleAssign DisplayName="Multiple Assign ApplicationCase-1" sap:VirtualizedContainerService.HintSize="695,191" sap2010:WorkflowViewState.IdRef="MultipleAssign_12">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_33">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[placeholder_divApplicationCode]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">["&lt;div id=""cardImagesContainer""&gt;&lt;div class=""img-resize""&gt;&lt;img onclick=""ShowModal(this);"" class=""modal-image""alt=""{0}"" src=""{1}""/&gt;&lt;/div&gt;&lt;div id=""problem-element-image-container""&gt;&lt;p&gt;&lt;strong&gt;Problem with element: &lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;&lt;div id=""appImagesContainer""&gt;{2}&lt;div class=""img-resize center-align""&gt;&lt;img onclick=""ShowModal(this);"" class=""modal-image"" src=""data:image/png;base64, {3}""/&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;"]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_34">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[ActionType]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">the Application</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_35">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[CardTag]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">uix:ApplicationCard</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_36">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="sx:XmlNode">[ActivityNode]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="sx:XmlNode">[XmlMainFile.DocumentElement.SelectNodes("//*[@DisplayName="""+ActivityName+"""]",xmlNamespaceManagerMain)(0)]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                            </ui:MultipleAssign>
                            <Sequence DisplayName="Attach Screenshots" sap:VirtualizedContainerService.HintSize="695,2650" sap2010:WorkflowViewState.IdRef="Sequence_46">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="ScreenshotAnchor" />
                                <Variable x:TypeArguments="x:String" Name="ScreenshotElement" />
                                <Variable x:TypeArguments="x:String" Name="ScreenshotCard" />
                                <Variable x:TypeArguments="sx:XmlNode" Name="ChildNodeTarget" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <TryCatch DisplayName="Try Catch: Find Card Screenshot" sap:VirtualizedContainerService.HintSize="653,2009" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <TryCatch.Try>
                                  <Sequence DisplayName="Find Card Screenshot" sap:VirtualizedContainerService.HintSize="562,1782" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign DisplayName="Assign CardNode" sap:VirtualizedContainerService.HintSize="520,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="sx:XmlNode">[ActivityCardNode]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="sx:XmlNode">[ActivityNode]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <While DisplayName="Find parent" sap:VirtualizedContainerService.HintSize="520,218" sap2010:WorkflowViewState.IdRef="While_8">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <While.Condition>[not ActivityCardNode.Name.Equals(CardTag)]</While.Condition>
                                      <Assign DisplayName="Assign Activity Card Node from Parent" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="sx:XmlNode">[ActivityCardNode]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="sx:XmlNode">[ActivityCardNode.ParentNode]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </While>
                                    <ui:ForEach x:TypeArguments="sx:XmlNode" CurrentIndex="{x:Null}" DisplayName="Find Target" sap:VirtualizedContainerService.HintSize="520,496" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[ActivityCardNode.ChildNodes]">
                                      <ui:ForEach.Body>
                                        <ActivityAction x:TypeArguments="sx:XmlNode">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="sx:XmlNode" Name="item" />
                                          </ActivityAction.Argument>
                                          <If Condition="[item.Name.Equals(&quot;uix:ApplicationCard.TargetApp&quot;)]" sap:VirtualizedContainerService.HintSize="484,362" sap2010:WorkflowViewState.IdRef="If_9">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="sx:XmlNode">[ChildNodeTarget]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="sx:XmlNode">[item]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_3" />
                                              </Sequence>
                                            </If.Then>
                                          </If>
                                        </ActivityAction>
                                      </ui:ForEach.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ForEach>
                                    <ui:ForEach x:TypeArguments="sx:XmlNode" CurrentIndex="{x:Null}" DisplayName="For Each ChildNode in TargetApp" sap:VirtualizedContainerService.HintSize="520,496" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[ChildNodeTarget.ChildNodes]">
                                      <ui:ForEach.Body>
                                        <ActivityAction x:TypeArguments="sx:XmlNode">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="sx:XmlNode" Name="item" />
                                          </ActivityAction.Argument>
                                          <If Condition="[item.Name.Equals(&quot;uix:TargetApp&quot;)]" sap:VirtualizedContainerService.HintSize="484,362" sap2010:WorkflowViewState.IdRef="If_10">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Assign ChildNodeTarget" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_45">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="sx:XmlNode">[ChildNodeTarget]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="sx:XmlNode">[item]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_4" />
                                              </Sequence>
                                            </If.Then>
                                          </If>
                                        </ActivityAction>
                                      </ui:ForEach.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ForEach>
                                    <Assign DisplayName="Assign ScreenshotCard" sap:VirtualizedContainerService.HintSize="520,60" sap2010:WorkflowViewState.IdRef="Assign_46">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[ScreenshotCard]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[".screenshots/"+ChildNodeTarget.Attributes("InformativeScreenshot").Value]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Assign ApplicationNamePath" sap:VirtualizedContainerService.HintSize="520,60" sap2010:WorkflowViewState.IdRef="Assign_47">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[ApplicationName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[ChildNodeTarget.Attributes("FilePath").Value]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Assign ApplicationURL" sap:VirtualizedContainerService.HintSize="520,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[ApplicationURL]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[ChildNodeTarget.Attributes("Url").Value]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="566,21" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                      </ActivityAction.Argument>
                                      <Sequence sap:VirtualizedContainerService.HintSize="304,249" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Default="%[APPLICATION_NAME_PLACEHOLDER]" Name="ApplicationNamePlaceholder" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="Assign ScreenshotCardPlaceholder empty" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[ScreenshotCard]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">["data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNkYAAAAAYAAjCB0C8AAAAASUVORK5CYII="]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign [APPLICATION_NAME_PLACEHOLDER]" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_50">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[ApplicationNamePlaceholder]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[ActivityCardNode.Attributes("DisplayName").Value]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                              <If sap2010:Annotation.AnnotationText="If the activity that throw the error is one of the Card types, there are no images to show for the element." Condition="[ActivityNode.Name.Equals(&quot;uix:ApplicationCard&quot;)]" DisplayName="If Card element" sap:VirtualizedContainerService.HintSize="653,509" sap2010:WorkflowViewState.IdRef="If_12">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence DisplayName="Card error / Without element" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign DisplayName="Assign divApplication without element" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_61">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[placeholder_divApplicationCode]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">["&lt;div id=""cardImagesContainer""&gt;&lt;div class=""img-resize""&gt;&lt;img onclick=""ShowModal(this);"" class=""modal-image""alt=""{0}"" src=""{1}""/&gt;&lt;/div&gt;&lt;/div&gt;"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Assign divApplicaitonPlaceholder" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_62">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[placeholder_divApplicationCode]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[String.Format(placeholder_divApplicationCode,ApplicationName,ScreenshotCard)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Take element screenshots" sap:VirtualizedContainerService.HintSize="304,334" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <TryCatch DisplayName="Try Catch :  Screenshot_Element" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <TryCatch.Try>
                                        <Assign DisplayName="Assign Screenshot_Element" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_63">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[ScreenshotElement]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[ActivityNode.SelectSingleNode(".//uix:TargetAnchorable",xmlNamespaceManagerMain).Attributes("ImageBase64").Value]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </TryCatch.Try>
                                      <TryCatch.Catches>
                                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ActivityAction x:TypeArguments="s:Exception">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                            </ActivityAction.Argument>
                                            <Assign DisplayName="Assign Screenshot_Element empty" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_64">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[ScreenshotElement]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">["iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNkYAAAAAYAAjCB0C8AAAAASUVORK5CYII="]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </ActivityAction>
                                        </Catch>
                                      </TryCatch.Catches>
                                    </TryCatch>
                                    <TryCatch DisplayName="Try Catch : Screenshot_Anchor" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="TryCatch_10">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <TryCatch.Try>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Assign Screenshot_Anchor" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_65">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[ScreenshotAnchor]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[ActivityNode.SelectSingleNode(".//uix:Target",xmlNamespaceManagerMain).Attributes("ImageBase64").Value]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign divAnchorPlaceoholder" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_66">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[placeholder_divAnchor]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[String.Format("&lt;div class=""img-resize center-align""&gt;&lt;img onclick=""ShowModal(this);"" class=""modal-image""alt="""" src=""data:image/png;base64, {0}""/&gt;&lt;/div&gt;&lt;div class=""center-align"" id=""arrow-container"" &gt;&lt;img height=""34px;"" alt="""" src=""data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAC4AAAAiCAYAAAAge+tMAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAEcSURBVFhH7ZXPSwJRFIX7//+S2kSUi1BwYSWKLURJGSoJE1OS/DGj6ZRz4j7muXDzNJ9nEO4HDwYuDN/lnTNzhhNFxdmoOBsVZ6PibGjiSZKkT36giPc+RsgVa+h0B94WoIhPZhHua084vynhulBF8NrD73qdTv8HNePjabhZ4CpfOWiBTMopCzw8tnCRuzMLtF/eEcc/6XQ3nOLLVYxo/n2UM/gco1humBu4vC2jGbwhjBZm5sIpXq0H5sXMI3Fy4RSfhnMMR5OjnP7wa5N5Kywx2oVMMi55bj13Tb73FbZQxUVYcix5lmJKQfcVtlDEt4WlN1LCQ6CIy/fal7CFIi4/GV/ClkzK6QMVZ6PibFScjYqzUXE2JyoO/AHqaxyQglTMQAAAAABJRU5ErkJggg==""/&gt;&lt;/div&gt;",ScreenshotAnchor)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </TryCatch.Try>
                                      <TryCatch.Catches>
                                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,129" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ActivityAction x:TypeArguments="s:Exception">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                            </ActivityAction.Argument>
                                            <Assign DisplayName="Assign Screenshot_Anchor empty" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_67">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[placeholder_divAnchor]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">
                                                  <Literal x:TypeArguments="x:String" Value="" />
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </ActivityAction>
                                        </Catch>
                                      </TryCatch.Catches>
                                    </TryCatch>
                                    <Assign DisplayName="Assign divApplicaitonPlaceholder" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_68">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[placeholder_divApplicationCode]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[String.Format(placeholder_divApplicationCode,ApplicationName,ScreenshotCard,placeholder_divAnchor,ScreenshotElement)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </Sequence>
                        </Switch>
                        <ui:MultipleAssign DisplayName="Multiple Assign - Replace Text Info in Custom Input template" sap:VirtualizedContainerService.HintSize="566,253" sap2010:WorkflowViewState.IdRef="MultipleAssign_13">
                          <ui:MultipleAssign.AssignOperations>
                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_37">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholder_ActionType, ActionType)]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_38">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholder_ActivityName , ActivityName)]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_39">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholder_ActivityType, ActivityType)]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_40">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(ProblemDescriptionPlaceholder, ProblemDescription)]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_41">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholder_divCard,placeholder_divApplicationCode)]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_42">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholder_SkipIteration, IF(FoundRepetitiveActivity, "", "display: none"))]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                            </scg:List>
                          </ui:MultipleAssign.AssignOperations>
                        </ui:MultipleAssign>
                        <ui:WriteTextFile DisplayName="Write Text File" FileName="[CustomInputContentPath]" sap:VirtualizedContainerService.HintSize="566,132" sap2010:WorkflowViewState.IdRef="WriteTextFile_2" Text="[ErrorTemplate]" />
                      </Sequence>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">650,704</av:Point>
                              <av:Size x:Key="ShapeSize">200,108</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">750,812 750,844</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:CustomInput sap2010:Annotation.AnnotationText="Present the user a dialog with error details and ask for an action: Retry / Stop / Skip." DisplayName="Custom Input - Runtime Execution Error" Height="560" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="CustomInput_1" Result="[UserAction]" URI="[CustomInputContentPath]" Width="1000">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:CustomInput>
                          <FlowStep.Next>
                            <FlowStep x:Name="__ReferenceID9">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">650,844</av:Point>
                                  <av:Size x:Key="ShapeSize">200,51</av:Size>
                                  <av:PointCollection x:Key="ConnectorLocation">750,896 750,1130 595,1130</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Switch x:TypeArguments="x:String" DisplayName="Switch Custom Input Result" Expression="[UserAction.Trim]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Switch`1_3">
                                <Switch.Default>
                                  <Assign sap2010:Annotation.AnnotationText="This case is when the user dismissed the dialog without choosing an action." DisplayName="Assign Abort" sap:VirtualizedContainerService.HintSize="262,102" sap2010:WorkflowViewState.IdRef="Assign_57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="uico:ErrorAction">[result]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="uico:ErrorAction">[ErrorAction.Abort]</InArgument>
                                    </Assign.Value>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Assign>
                                </Switch.Default>
                                <Assign x:Key="Stop" sap2010:Annotation.AnnotationText="User pressed on Stop button." DisplayName="Assign Abort" sap:VirtualizedContainerService.HintSize="262,87" sap2010:WorkflowViewState.IdRef="Assign_54">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="uico:ErrorAction">[result]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="uico:ErrorAction">[ErrorAction.Abort]</InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                                <Assign x:Key="Retry" sap2010:Annotation.AnnotationText="User pressed on Retry button." DisplayName="Assign Retry" sap:VirtualizedContainerService.HintSize="262,87" sap2010:WorkflowViewState.IdRef="Assign_55">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="uico:ErrorAction">[result]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="uico:ErrorAction">[ErrorAction.Retry]</InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                                <Assign x:Key="Skip" sap2010:Annotation.AnnotationText="User pressed on Skip button." DisplayName="Assign Ignore" sap:VirtualizedContainerService.HintSize="262,87" sap2010:WorkflowViewState.IdRef="Assign_56">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="uico:ErrorAction">[result]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="uico:ErrorAction">[ErrorAction.Ignore]</InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                                <Sequence x:Key="SkipIteration" sap:VirtualizedContainerService.HintSize="376,324" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:WriteTextFile DisplayName="WriteTextFile ErrorTemplate" FileName="[TemplateFilePath]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="WriteTextFile_3" Text="[SkipIterationFlagText+ErrorTemplateBackup]" />
                                  <Assign DisplayName="Assign Action Continue" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="uico:ErrorAction">[result]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="uico:ErrorAction">[ErrorAction.Continue]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </Switch>
                              <FlowStep.Next>
                                <x:Reference>__ReferenceID0</x:Reference>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowDecision.False>
                </FlowDecision>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
  </Flowchart>
</Activity>